<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Monaco Editor with Input/Output</title>
    <!-- Load Tailwind CSS -->
    <link href="/output.css" rel="stylesheet">
    <!-- Load the Monaco Editor -->
    <script src="/monaco-editor/min/vs/loader.js"></script>
    <style>
        #editor-container {
            width: 100%;
            height: 600px; /* Larger height for the editor */
            border: 1px solid #333;
            margin-top: 20px;
        }
    </style>
</head>

<body class="bg-gray-900 text-gray-200 p-6">
    <div class="container mx-auto max-w-7xl">
        <!-- Header Section -->
        <h1 class="text-4xl font-bold mb-8 text-center text-green-400">Online Code Editor</h1>

        <!-- Layout: Flex Container -->
        <div class="flex flex-col md:flex-row gap-8">
            
            <!-- Left Side: Editor Section -->
            <div class="md:w-2/3">
                <!-- Language Dropdown & Run Button -->
                <div class="flex justify-between items-center mb-4">
                    <!-- Language Selector -->
                    <div class="flex items-center">
                        <label for="language-selector" class="text-lg font-semibold mr-2">Language:</label>
                        <select id="language-selector" class="bg-gray-800 text-gray-200 border border-gray-700 rounded px-4 py-2 focus:outline-none focus:ring-2 focus:ring-green-500">
                            <option value="javascript">JavaScript</option>
                            <option value="python">Python</option>
                            <option value="java">Java</option>
                            <option value="c">C</option>
                        </select>
                    </div>
                    
                    <!-- Run Button -->
                    <button id="run-btn" class="bg-green-500 hover:bg-green-600 text-white font-semibold px-6 py-2 rounded shadow-md focus:outline-none focus:ring-2 focus:ring-green-400 focus:ring-opacity-50">
                        Run Code
                    </button>
                </div>
                
                <!-- Monaco Editor Container -->
                <div id="editor-container" class="rounded-lg shadow-lg bg-gray-800"></div>
            </div>
            
            <!-- Right Side: Input & Output Section -->
            <div class="md:w-1/3 flex flex-col gap-6">
                <!-- Input Field -->
                <div>
                    <label for="input-field" class="block text-lg font-semibold mb-2">Input (STDIN):</label>
                    <textarea id="input-field" class="w-full h-32 bg-gray-800 text-gray-300 border border-gray-700 rounded-lg p-3 focus:outline-none focus:ring-2 focus:ring-green-500" placeholder="Enter your input here..."></textarea>
                </div>
                
                <!-- Output Field -->
                <div>
                    <label for="output-field" class="block text-lg font-semibold mb-2">Output (STDOUT):</label>
                    <textarea id="output-field" class="w-full h-32 bg-gray-800 text-gray-300 border border-gray-700 rounded-lg p-3 focus:outline-none focus:ring-2 focus:ring-green-500" readonly placeholder="Output will be shown here..."></textarea>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Configure Monaco Editor
        require.config({ paths: { 'vs': '/monaco-editor/min/vs' } });

        let editor;

        // Language boilerplate codes
        const boilerplate = {
            javascript: 'console.log("Hello, World!");',
            python: 'print("Hello, World!")',
            java: 'class Main {\n    public static void main(String[] args) {\n        // your code goes here\n    }\n}',
            c: '#include <stdio.h>\n\nint main() {\n    // your code goes here\n    return 0;\n}'
        };

        // Initialize Monaco Editor
        require(['vs/editor/editor.main'], function () {
            editor = monaco.editor.create(document.getElementById('editor-container'), {
                value: boilerplate['javascript'],
                language: 'javascript',
                theme: 'vs-dark',
                automaticLayout: true
            });
        });

        // Handle Language Change
        document.getElementById('language-selector').addEventListener('change', function (event) {
            const newLanguage = event.target.value;
            editor.setValue(boilerplate[newLanguage]);
            monaco.editor.setModelLanguage(editor.getModel(), newLanguage);
        });

        // Run button event
        document.getElementById('run-btn').addEventListener('click', function () {
            const code = editor.getValue();
            const language = document.getElementById('language-selector').value;
            const input = document.getElementById('input-field').value;

            // Send code to server for execution
            fetch('/execute', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ code, language, input })
            })
            .then(response => response.json())
            .then(data => {
                document.getElementById('output-field').value = data.output;
            })
            .catch(error => {
                console.error('Error:', error);
            });
        });
    </script>
</body>

</html>
